#!/usr/bin/env python3
#
# speccyboot-update.py
#
# Simple script to update the 'stage2' second-stage loader,
# used for serving .z80 snapshots over TFTP to SpeccyBoot.
#
# Part of the SpeccyBoot project <https://github.com/patrikpersson/speccyboot>

# if you installed to another directory, you'll have to change this
SPECCYBOOT_HOME = '/usr/local/share/speccyboot/'

# if your TFTP server serves from another directory than the ones listed here,
# please modify this list

TFTP_DIRS = [
    '/tftpboot',
    '/private/tftpboot',
    '/srv/tftp',
    '/var/lib/tftpboot',
    '/var/ftpd',
    '/var/tftp'
]

# ----------------------------------------------------------------------------
# Appends spboot.bin with a snapshot index, and writes the result as 'stage2'.
#
# The layout of the resulting binary is as follows:
#
# contents                     length
# --------                     ------
# spboot.bin                   (variable, code)
# number of snapshots (N)      1 byte
# array of filename pointers   2N
# NUL-terminated filenames     (variable)
# ----------------------------------------------------------------------------

import os
import glob
import sys

FINAL_BINARY = 'menu.bin'

loading_address = 0x6400

# ----------------------------------------------------------------------------

def update_index_in_dir(dir):
    os.chdir(dir)

    try:
        os.remove(FINAL_BINARY)
    except FileNotFoundError:
        pass

    list = glob.glob('*.z80')
    n = len(list)
    if n == 0:
        print("(no snapshots found in {} -- ignoring)".format(dir))
        return False

    list.sort()

    # calculate addresses
    nbr_snapshots_address = loading_address
    array_address = nbr_snapshots_address + 1
    filenames_address = array_address + n * 2

    # calculate array contents
    pointers = []
    base = filenames_address
    for filename in list:
        pointers += [base]
        base += len(filename) + 1           # +1 for terminating NUL

    with open(FINAL_BINARY, "wb") as output:
        output.write(bytes([n]))
        for p in pointers:
            output.write(bytes([p % 256, p // 256]))
        for filename in list:
            output.write(filename.encode(encoding='ascii',errors='replace'))
            output.write(bytes([0]))
    
    print("updated index: {} snapshots, SpeccyBoot menu.bin installed in {}".format(n,dir))
    # print("loading address = {}".format(loading_address))
    return True

# ----------------------------------------------------------------------------

any_found = False
for tftp_dir in TFTP_DIRS:
    if os.path.isdir(tftp_dir):
        any_found |= update_index_in_dir(tftp_dir)

if not any_found:
    print("ERROR: no snapshots found in any directory!")
    sys.exit(1)
